<!-- Load the Client component. -->
<script src="https://js.braintreegateway.com/web/3.6.3/js/client.min.js"></script>

<!-- Load the Hosted Fields component. -->
<script src="https://js.braintreegateway.com/web/3.6.3/js/hosted-fields.min.js"></script>

<script src="https://js.braintreegateway.com/web/3.22.2/js/paypal-checkout.min.js"></script>
<script src="https://www.paypalobjects.com/api/checkout.js" data-version-4></script>


<main class='container'>
  <div class='row my-5'>
    <div class='col-12'>
      <h1 class='text-center'>Payment for your reservation at <%= @reservation.listing.name %> </h1>
      <div class='row'>
        <div class="check-out-wrapper my-3 col-8">
          <%= form_for :checkout_form, url: payments_checkout_path, html: { id: "checkout_form"} do |form| %>

            <%= form.label :card_number, "Credit Card Number", html: {class: "hosted-fields--label"} %>
            <div id="card-number" class="hosted-field"></div>

            <%= form.label :expiration_date, "Expiration Date", html: {class: "hosted-fields--label"} %>
            <div id="expiration-date" class="hosted-field"></div>

            <%= form.label :cvv, "CVV", html: {class: "hosted-fields--label"} %>
            <div id="cvv" class="hosted-field"></div>

            <%= form.hidden_field "payment_method_nonce" %>

            <%= form.hidden_field :amount, value: number_with_precision(@reservation.total_price, precision: 2)  %>
            <%= form.hidden_field :reservation_id, value: @reservation.id  %>


          </div>      <!-- end form -->
          <div class='col-4 my-5'>
            <div class='side-box'>
              <h2>Total to Pay</h2>
              <h1>RM <%= number_with_precision(@reservation.total_price,precision: 2) %>
                <div class="button-container mt-3">
                  <%= form.submit "Make payment", disabled: true, class: "btn btn-primary", id: "submit-payment-btn" %>
                </div>
                <div id="paypal-button"></div>
              <% end %>
            </div>
          </div>
        </div>
    </div>
  </div>
</main>



<!-- Braintree -->
<script>
      var form = document.querySelector('#checkout_form');
      var submit = document.querySelector("#submit-payment-btn");
      var authorization = '<%= @client_token %>'

      braintree.client.create({
        authorization: authorization
      }, function (clientErr, clientInstance) {
        if (clientErr) {
          console.error(clientErr);
          return;
        }

        // This example shows Hosted Fields, but you can also use this
        // client instance to create additional components here, such as
        // PayPal or Data Collector.

        braintree.hostedFields.create({
          client: clientInstance,
          styles: {
            'input': {
              'font-size': '14px'
            },
            'input.invalid': {
              'color': 'red'
            },
            'input.valid': {
              'color': 'green'
            }
          },
          fields: {
            number: {
              selector: '#card-number',
              placeholder: '4111 1111 1111 1111'
            },
            cvv: {
              selector: '#cvv',
              placeholder: '123'
            },
            expirationDate: {
              selector: '#expiration-date',
              placeholder: '10/2019'
            }
          }
        }, function (hostedFieldsErr, hostedFieldsInstance) {
          if (hostedFieldsErr) {
            console.error(hostedFieldsErr);
            return;
          }

          submit.removeAttribute('disabled');

          form.addEventListener('submit', function (event) {
            event.preventDefault();

            hostedFieldsInstance.tokenize(function (tokenizeErr, payload) {
              if (tokenizeErr) {
                console.error(tokenizeErr);
                return;
              }

              document.querySelector('input[name="checkout_form[payment_method_nonce]"]').value = payload.nonce;
              form.submit();
            });
          }, false);
        });
      });
    </script>

<script>
    // Create a client.
    var authorization = '<%= @client_token %>'
braintree.client.create({
  authorization: authorization
}, function (clientErr, clientInstance) {

  // Stop if there was a problem creating the client.
  // This could happen if there is a network error or if the authorization
  // is invalid.
  if (clientErr) {
    console.error('Error creating client:', clientErr);
    return;
  }

  // Create a PayPal Checkout component.
  braintree.paypalCheckout.create({
    client: clientInstance
  }, function (paypalCheckoutErr, paypalCheckoutInstance) {

    // Stop if there was a problem creating PayPal Checkout.
    // This could happen if there was a network error or if it's incorrectly
    // configured.
    if (paypalCheckoutErr) {
      console.error('Error creating PayPal Checkout:', paypalCheckoutErr);
      return;
    }

    // Set up PayPal with the checkout.js library
    paypal.Button.render({
      env: 'production', // or 'sandbox'
      commit: true, // This will add the transaction amount to the PayPal button

      payment: function () {
        return paypalCheckoutInstance.createPayment({
          flow: 'checkout', // Required
          amount: 10.00, // Required
          currency: 'USD', // Required
          enableShippingAddress: true,
          shippingAddressEditable: false,
          shippingAddressOverride: {
            recipientName: 'Scruff McGruff',
            line1: '1234 Main St.',
            line2: 'Unit 1',
            city: 'Chicago',
            countryCode: 'US',
            postalCode: '60652',
            state: 'IL',
            phone: '123.456.7890'
          }
        });
      },

      onAuthorize: function (data, actions) {
        return paypalCheckoutInstance.tokenizePayment(data)
          .then(function (payload) {
            // Submit `payload.nonce` to your server
          });
      },

      onCancel: function (data) {
        console.log('checkout.js payment cancelled', JSON.stringify(data, 0, 2));
      },

      onError: function (err) {
        console.error('checkout.js error', err);
      }
    }, '#paypal-button').then(function () {
      // The PayPal button will be rendered in an html element with the id
      // `paypal-button`. This function will be called when the PayPal button
      // is set up and ready to be used.
    });

  });

});

  </script>
